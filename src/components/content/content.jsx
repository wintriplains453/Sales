import { useState, useEffect } from 'react';
import Sorting from '../../utils/sorting';

import './content.scss';

function Content({time}) {
  const [isPopup, setIsPopup] = useState(false)
  const [dataDiscount, setDataDiscount] = useState([])
  const [dataSales, setDataSales] = useState([])
  const [dataNotSales, setDataNotSales] = useState([])

  const dopDataSale = [
    {sale: -30, slogan: "–ß—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞—Ç—å üëçüèª"},
    {sale: -40, slogan: "–ü—Ä–∏–≤–µ—Å—Ç–∏ —Ç–µ–ª–æ –≤–ø–æ—Ä—è–¥–æ–∫ üí™üèª"},
    {sale: -50, slogan: "–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ üî•"},
    {sale: -70, slogan: "–í—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–µ –∏¬†–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–≤–æ—ë –∑–¥–æ—Ä–æ–≤—å–µ ‚≠êÔ∏è"},
  ]

  useEffect(() => {
    fetch('https://t-pay.iqfit.app/subscribe/list-test', {
      method: 'GET'
    }).then(response => response.json()).then(data => {
      const sorting = new Sorting(data)
      const result = sorting.process()
      setDataDiscount(result.discount)
      setDataSales(result.sales)
      setDataNotSales(result.notSales)
    })
  }, [])

  useEffect(() => {
    if(time === 0) {
      setIsPopup(true)
    }
  }, [time])

  const close = () => {
    console.log('here')
    setIsPopup(false)
  }

  return (
    <div className='contentWrapper'>
      {time === 0 && isPopup === true ?
        <>
          <div className='popupWrapper'>
            <h2>–ù–µ —É–ø—É—Å—Ç–∏ —Å–≤–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å</h2>
            <p>–ú—ã –∑–Ω–∞–µ–º, –∫–∞–∫ —Ç—Ä—É–¥–Ω–æ –Ω–∞—á–∞—Ç—å.. –ü–æ—ç—Ç–æ–º—É!</p>
            <b>–í —ç—Ç–æ—Ç popup —Ç–∞–∫–∏–µ –∂–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏–ª–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ</b>
            <div className='wrapperCard'>
              {dataDiscount.map(item => (
                <div className='Card'key={item.id}>
                  <p className='CardName'>{item.name}</p>
                  <p className='CardPrice'>{item.price}‚ÇΩ</p>
                </div>
              ))

              }
            </div>
            <button className='btn'>–ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
          </div>
          <div className='backgroundDark' onClick={() => setIsPopup(false)}></div>        
        </> : null
      }
      <h1>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω</h1>
      <main className='wrapperMainContent'>
        <div className='backgroundImage' />
        <div>
          <div className='wrapperCard'>
            {dataSales.map((item, index) => (
              <div className='Card'key={item.id}>
                {time !== 0 && isPopup !== true ?
                  <div className='wrapperSale'>{dopDataSale[index].sale}%</div>: null
                }
                <p className='CardName'>{item.name}</p>
                <div className='wrapperPrice'>
                  <p className='CardPrice'>{time !== 0 && isPopup !== true ? item.price: dataNotSales[index].price}‚ÇΩ</p>
                  {time !== 0 && isPopup !== true ?
                    <p className='CardNotSale'>{ dataNotSales[index].price}‚ÇΩ</p>: null
                  }
                  
                </div>
                <div style={{width: '80%'}}>
                  <p className='CardSlogan'>{dopDataSale[index].slogan}</p>
                </div>
                
              </div>
            ))}
          </div>
          <p className='textDefault'>–°–ª–µ–¥—É—è –ø–ª–∞–Ω—É –Ω–∞ 3 –º–µ—Å—è—Ü–∞, –ª—é–¥–∏ –ø–æ–ª—É—á–∞—é—Ç –≤ 2 —Ä–∞–∑–∞ –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —á–µ–º –∑–∞ 1 –º–µ—Å—è—Ü</p>
          <div className='wrapperCheckbox'>
            <input type="checkbox" id="checkbox1" />
            <label htmlFor="checkbox1" className='lightText'>–Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å <span style={{color: '#2D97F9'}}>–ü—Ä–∞–≤–∏–ª–∞–º–∏ —Å–µ—Ä–≤–∏—Å–∞</span> –∏  —É—Å–ª–æ–≤–∏—è–º–∏ <span style={{color: '#2D97F9'}}>–ü—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç—ã.</span></label>
          </div>
          <button className='btn'>–ö—É–ø–∏—Ç—å</button>
          <p className='lightText textHide'>–ù–∞–∂–∏–º–∞—è ¬´–ö—É–ø–∏—Ç—å¬ª, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—à–∞–µ—Ç—Å—è –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏—é –∫—É–ø–ª–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞. –î–∞–ª—å–Ω–µ–π—à–∏–µ —Å–ø–∏—Å–∞–Ω–∏—è –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º –≤ –∞–∫—Ü–∏–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø–æ –ø–æ–ª–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –æ—Ñ–µ—Ä—Ç–µ.</p>
        </div>
      </main>
    </div>
  );
}

export default Content;
